
function f() -> int { return 42; }
function f2(int a, int b) -> int { return a + b; }
function f3(int a, int b) -> int { if (a < b) return 5; return 10; }
function f4(int a, int b) -> int { return a - b; }

function eq(int a, int b) -> bool { return a == b; }
function ne(int a, int b) -> bool { return a != b; }
function below(uint a, uint b) -> bool { return a < b; }
function gt(int a, int b) -> bool { return a > b; }
function le(int a, int b) -> bool { return a <= b; }
function ge(int a, int b) -> bool { return a >= b; }

function g(bool x) -> bool { return !x; }

function multiply(uint a, uint b) -> uint { return a * b; }
function imultiply(int a, int b) -> int { return a * b; }

function divide(uint a, uint b) -> uint { return a / b; }
function idivide(int a, int b) -> int { return a / b; }

function negate(int x) -> int { return -x; }

function and_(bool a, bool b) -> bool { return (a && b); }
function or_(bool a, bool b) -> bool { return (a || b); }

function h(bool x) -> int {
    int value;
    if (x) value = 5;
    else value = 10;
    return value;
}

function spill_test() -> int
{
    int x = 5;
    int y = 2*x;
    int z = y - 2;
    int w = x + z;

    int a = x*x + y*y + z*z + w*w;
    int b = a + x*y - z*w;

    return a - b; // 54
}

function many_params_test(int x, uint y, bool z, int w, int a, uint b, bool c) -> int
{
    if (z && c)
    {
        return x;
    }
    if (y < 100u)
    {
        return w;
    }
    if (b > 5u)
    {
        return a;
    }
    return -22;
}

function call_test() -> int { return f(); }
function call_test2() -> int { return f2(42, 30); }
function call_test3() -> int { return 42 + f2(10, 20); }
function call_test4() -> int { return f() + f2(10, 20); }

function call_test5() -> int {
    return many_params_test(10, 20, true, 30, 40, 50, true);
}
function call_test6() -> int {
    return many_params_test(10, 20, false, 30, 40, 50, true);
}
function call_test7() -> int {
    return many_params_test(10, 200, false, 30, 40, 50, true);
}function call_test8() -> int {
    return many_params_test(10, 200, false, 30, 40, 5, true);
}
function call_test9() -> int {    return many_params_test(10, 200, true, 30, 40, 5, false);
}

function basic_block_test(bool b) -> int
{
    int x;
    int y;
    if (b)
    {
        y = 10 * 5; // 50
        x = y * 2 + 20; // 120
    }
    else
    {
        y = 10 * 6; // 60
        x = y + 30; // 90
    }

    x = y + x; // true:170 false:150

    return x;
}
